{"remainingRequest":"/Users/anaispuig/Desktop/final/Front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/anaispuig/Desktop/final/Front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anaispuig/Desktop/final/Front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anaispuig/Desktop/final/Front/src/views/sellerView/myshop.vue?vue&type=template&id=c146d9ba&scoped=true&","dependencies":[{"path":"/Users/anaispuig/Desktop/final/Front/src/views/sellerView/myshop.vue","mtime":1636118417219},{"path":"/Users/anaispuig/Desktop/final/Front/node_modules/cache-loader/dist/cjs.js","mtime":1635871043057},{"path":"/Users/anaispuig/Desktop/final/Front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1635871042689},{"path":"/Users/anaispuig/Desktop/final/Front/node_modules/cache-loader/dist/cjs.js","mtime":1635871043057},{"path":"/Users/anaispuig/Desktop/final/Front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1635871042688}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}